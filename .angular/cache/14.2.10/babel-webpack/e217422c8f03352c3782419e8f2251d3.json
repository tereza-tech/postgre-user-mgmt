{"ast":null,"code":"import _asyncToGenerator from \"/home/runner/Usrmgmt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../supabase.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\n\nfunction AvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0._avatarUrl, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction AvatarComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 6);\n  }\n}\n\nexport class AvatarComponent {\n  constructor(supabase, dom) {\n    this.supabase = supabase;\n    this.dom = dom;\n    this.uploading = false;\n    this.upload = new EventEmitter();\n  }\n\n  set avatarUrl(url) {\n    if (url) {\n      this.downloadImage(url);\n    }\n  }\n\n  ngOnInit() {}\n\n  downloadImage(path) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data\n        } = yield _this.supabase.downLoadImage(path);\n\n        if (data instanceof Blob) {\n          _this._avatarUrl = _this.dom.bypassSecurityTrustResourceUrl(URL.createObjectURL(data));\n        }\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error('Error downloading image: ', error.message);\n        }\n      }\n    })();\n  }\n\n  uploadAvatar(event) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.uploading = true;\n\n        if (!event.target.files || event.target.files.length === 0) {\n          throw new Error('You must select an image to upload.');\n        }\n\n        const file = event.target.files[0];\n        const fileExt = file.name.split('.').pop();\n        const filePath = `${Math.random()}.${fileExt}`;\n        yield _this2.supabase.uploadAvatar(filePath, file);\n\n        _this2.upload.emit(filePath);\n      } catch (error) {\n        if (error instanceof Error) {\n          alert(error.message);\n        }\n      } finally {\n        _this2.uploading = false;\n      }\n    })();\n  }\n\n}\n\nAvatarComponent.ɵfac = function AvatarComponent_Factory(t) {\n  return new (t || AvatarComponent)(i0.ɵɵdirectiveInject(i1.SupabaseService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\n\nAvatarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AvatarComponent,\n  selectors: [[\"app-avatar\"]],\n  inputs: {\n    avatarUrl: \"avatarUrl\"\n  },\n  outputs: {\n    upload: \"upload\"\n  },\n  decls: 7,\n  vars: 4,\n  consts: [[\"alt\", \"Avatar\", \"class\", \"avatar image\", \"style\", \"height: 150px; width: 150px\", 3, \"src\", 4, \"ngIf\"], [\"class\", \"avatar no-image\", \"style\", \"height: 150px; width: 150px\", 4, \"ngIf\"], [2, \"width\", \"150px\"], [\"for\", \"single\", 1, \"button\", \"primary\", \"block\"], [\"type\", \"file\", \"id\", \"single\", \"accept\", \"image/*\", 2, \"visibility\", \"hidden\", \"position\", \"absolute\", 3, \"disabled\", \"change\"], [\"alt\", \"Avatar\", 1, \"avatar\", \"image\", 2, \"height\", \"150px\", \"width\", \"150px\", 3, \"src\"], [1, \"avatar\", \"no-image\", 2, \"height\", \"150px\", \"width\", \"150px\"]],\n  template: function AvatarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, AvatarComponent_img_1_Template, 1, 1, \"img\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AvatarComponent_div_2_Template, 1, 0, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"change\", function AvatarComponent_Template_input_change_6_listener($event) {\n        return ctx.uploadAvatar($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx._avatarUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx._avatarUrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", ctx.uploading ? \"Uploading ...\" : \"Upload\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.uploading);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdmF0YXIuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";AAAA,SAAoBA,YAApB,QAA+D,eAA/D;;;;;;;;ICCEC;;;;;IAEEA;;;;;;IAMJA;;;;ADAA,OAAM,MAAOC,eAAP,CAAsB;EAa1BC,YACmBC,QADnB,EAEmBC,GAFnB,EAEoC;IADjB;IACA;IAbnB,iBAAY,KAAZ;IASU,cAAS,IAAIL,YAAJ,EAAT;EAKN;;EAXS,IAATM,SAAS,CAACC,GAAD,EAAmB;IAC9B,IAAIA,GAAJ,EAAS;MACP,KAAKC,aAAL,CAAmBD,GAAnB;IACD;EACF;;EASDE,QAAQ,IAAW;;EAEbD,aAAa,CAACE,IAAD,EAAa;IAAA;;IAAA;MAC9B,IAAI;QACF,MAAM;UAAEC;QAAF,UAAiB,KAAI,CAACP,QAAL,CAAcQ,aAAd,CAA4BF,IAA5B,CAAvB;;QACA,IAAIC,IAAI,YAAYE,IAApB,EAA0B;UACxB,KAAI,CAACC,UAAL,GAAkB,KAAI,CAACT,GAAL,CAASU,8BAAT,CAChBC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CADgB,CAAlB;QAGD;MACF,CAPD,CAOE,OAAOO,KAAP,EAAc;QACd,IAAIA,KAAK,YAAYC,KAArB,EAA4B;UAC1BC,OAAO,CAACF,KAAR,CAAc,2BAAd,EAA2CA,KAAK,CAACG,OAAjD;QACD;MACF;IAZ6B;EAa/B;;EAEKC,YAAY,CAACC,KAAD,EAAW;IAAA;;IAAA;MAC3B,IAAI;QACF,MAAI,CAACC,SAAL,GAAiB,IAAjB;;QACA,IAAI,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,IAAuBH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAzD,EAA4D;UAC1D,MAAM,IAAIR,KAAJ,CAAU,qCAAV,CAAN;QACD;;QAED,MAAMS,IAAI,GAAGL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;QACA,MAAMG,OAAO,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,EAAhB;QACA,MAAMC,QAAQ,GAAG,GAAGC,IAAI,CAACC,MAAL,EAAa,IAAIN,OAAO,EAA5C;QAEA,MAAM,MAAI,CAACzB,QAAL,CAAckB,YAAd,CAA2BW,QAA3B,EAAqCL,IAArC,CAAN;;QACA,MAAI,CAACQ,MAAL,CAAYC,IAAZ,CAAiBJ,QAAjB;MACD,CAZD,CAYE,OAAOf,KAAP,EAAc;QACd,IAAIA,KAAK,YAAYC,KAArB,EAA4B;UAC1BmB,KAAK,CAACpB,KAAK,CAACG,OAAP,CAAL;QACD;MACF,CAhBD,SAgBU;QACR,MAAI,CAACG,SAAL,GAAiB,KAAjB;MACD;IAnB0B;EAoB5B;;AAvDyB;;;mBAAftB,iBAAeD;AAAA;;;QAAfC;EAAeqC;EAAAC;IAAAlC;EAAA;EAAAmC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCT5B5C;MACEA;MAOFA;MACAA;MAKAA,+BAA0B,CAA1B,EAA0B,OAA1B,EAA0B,CAA1B;MAEIA;MACFA;MACAA;MAKEA;QAAA,OAAU6C,wBAAV;MAA8B,CAA9B;MALF7C;;;;MAhBGA;MAAAA;MAQFA;MAAAA;MAMCA;MAAAA;MAQAA;MAAAA","names":["EventEmitter","i0","AvatarComponent","constructor","supabase","dom","avatarUrl","url","downloadImage","ngOnInit","path","data","downLoadImage","Blob","_avatarUrl","bypassSecurityTrustResourceUrl","URL","createObjectURL","error","Error","console","message","uploadAvatar","event","uploading","target","files","length","file","fileExt","name","split","pop","filePath","Math","random","upload","emit","alert","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/runner/Usrmgmt/src/app/avatar/avatar.component.ts","/home/runner/Usrmgmt/src/app/avatar/avatar.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\nimport { SupabaseService } from '../supabase.service';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.css'],\n})\nexport class AvatarComponent implements OnInit {\n  _avatarUrl: SafeResourceUrl | undefined;\n  uploading = false;\n\n  @Input()\n  set avatarUrl(url: string | null) {\n    if (url) {\n      this.downloadImage(url);\n    }\n  }\n\n  @Output() upload = new EventEmitter<string>();\n\n  constructor(\n    private readonly supabase: SupabaseService,\n    private readonly dom: DomSanitizer\n  ) {}\n\n  ngOnInit(): void {}\n\n  async downloadImage(path: string) {\n    try {\n      const { data } = await this.supabase.downLoadImage(path);\n      if (data instanceof Blob) {\n        this._avatarUrl = this.dom.bypassSecurityTrustResourceUrl(\n          URL.createObjectURL(data)\n        );\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        console.error('Error downloading image: ', error.message);\n      }\n    }\n  }\n\n  async uploadAvatar(event: any) {\n    try {\n      this.uploading = true;\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.');\n      }\n\n      const file = event.target.files[0];\n      const fileExt = file.name.split('.').pop();\n      const filePath = `${Math.random()}.${fileExt}`;\n\n      await this.supabase.uploadAvatar(filePath, file);\n      this.upload.emit(filePath);\n    } catch (error) {\n      if (error instanceof Error) {\n        alert(error.message);\n      }\n    } finally {\n      this.uploading = false;\n    }\n  }\n}\n","<div>\n  <img\n    *ngIf=\"_avatarUrl\"\n    [src]=\"_avatarUrl\"\n    alt=\"Avatar\"\n    class=\"avatar image\"\n    style=\"height: 150px; width: 150px\"\n  />\n</div>\n<div\n  *ngIf=\"!_avatarUrl\"\n  class=\"avatar no-image\"\n  style=\"height: 150px; width: 150px\"\n></div>\n<div style=\"width: 150px\">\n  <label class=\"button primary block\" for=\"single\">\n    {{ uploading ? 'Uploading ...' : 'Upload' }}\n  </label>\n  <input\n    style=\"visibility: hidden;position: absolute\"\n    type=\"file\"\n    id=\"single\"\n    accept=\"image/*\"\n    (change)=\"uploadAvatar($event)\"\n    [disabled]=\"uploading\"\n  />\n</div>\n"]},"metadata":{},"sourceType":"module"}