{"ast":null,"code":"import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n    this.channel = channel;\n    this.event = event;\n    this.payload = payload;\n    this.timeout = timeout;\n    this.sent = false;\n    this.timeoutTimer = undefined;\n    this.ref = '';\n    this.receivedResp = null;\n    this.recHooks = [];\n    this.refEvent = null;\n    this.rateLimited = false;\n  }\n\n  resend(timeout) {\n    this.timeout = timeout;\n\n    this._cancelRefEvent();\n\n    this.ref = '';\n    this.refEvent = null;\n    this.receivedResp = null;\n    this.sent = false;\n    this.send();\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return;\n    }\n\n    this.startTimeout();\n    this.sent = true;\n    const status = this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef()\n    });\n\n    if (status === 'rate limited') {\n      this.rateLimited = true;\n    }\n  }\n\n  updatePayload(payload) {\n    this.payload = Object.assign(Object.assign({}, this.payload), payload);\n  }\n\n  receive(status, callback) {\n    var _a;\n\n    if (this._hasReceived(status)) {\n      callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n    }\n\n    this.recHooks.push({\n      status,\n      callback\n    });\n    return this;\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return;\n    }\n\n    this.ref = this.channel.socket._makeRef();\n    this.refEvent = this.channel._replyEventName(this.ref);\n\n    const callback = payload => {\n      this._cancelRefEvent();\n\n      this._cancelTimeout();\n\n      this.receivedResp = payload;\n\n      this._matchReceive(payload);\n    };\n\n    this.channel._on(this.refEvent, {}, callback);\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger('timeout', {});\n    }, this.timeout);\n  }\n\n  trigger(status, response) {\n    if (this.refEvent) this.channel._trigger(this.refEvent, {\n      status,\n      response\n    });\n  }\n\n  destroy() {\n    this._cancelRefEvent();\n\n    this._cancelTimeout();\n  }\n\n  _cancelRefEvent() {\n    if (!this.refEvent) {\n      return;\n    }\n\n    this.channel._off(this.refEvent, {});\n  }\n\n  _cancelTimeout() {\n    clearTimeout(this.timeoutTimer);\n    this.timeoutTimer = undefined;\n  }\n\n  _matchReceive({\n    status,\n    response\n  }) {\n    this.recHooks.filter(h => h.status === status).forEach(h => h.callback(response));\n  }\n\n  _hasReceived(status) {\n    return this.receivedResp && this.receivedResp.status === status;\n  }\n\n}","map":{"version":3,"names":["DEFAULT_TIMEOUT","Push","constructor","channel","event","payload","timeout","sent","timeoutTimer","undefined","ref","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","send","_hasReceived","startTimeout","status","socket","push","topic","join_ref","_joinRef","updatePayload","Object","assign","receive","callback","_a","response","_makeRef","_replyEventName","_cancelTimeout","_matchReceive","_on","setTimeout","trigger","_trigger","destroy","_off","clearTimeout","filter","h","forEach"],"sources":["/home/runner/Usrmgmt/node_modules/@supabase/realtime-js/dist/module/lib/push.js"],"sourcesContent":["import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,eAAe,MAAMC,IAAN,CAAW;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAO,GAAG,EAA3B,EAA+BC,OAAO,GAAGN,eAAzC,EAA0D;IACjE,KAAKG,OAAL,GAAeA,OAAf;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,IAAL,GAAY,KAAZ;IACA,KAAKC,YAAL,GAAoBC,SAApB;IACA,KAAKC,GAAL,GAAW,EAAX;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,KAAKC,QAAL,GAAgB,EAAhB;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,WAAL,GAAmB,KAAnB;EACH;;EACDC,MAAM,CAACT,OAAD,EAAU;IACZ,KAAKA,OAAL,GAAeA,OAAf;;IACA,KAAKU,eAAL;;IACA,KAAKN,GAAL,GAAW,EAAX;IACA,KAAKG,QAAL,GAAgB,IAAhB;IACA,KAAKF,YAAL,GAAoB,IAApB;IACA,KAAKJ,IAAL,GAAY,KAAZ;IACA,KAAKU,IAAL;EACH;;EACDA,IAAI,GAAG;IACH,IAAI,KAAKC,YAAL,CAAkB,SAAlB,CAAJ,EAAkC;MAC9B;IACH;;IACD,KAAKC,YAAL;IACA,KAAKZ,IAAL,GAAY,IAAZ;IACA,MAAMa,MAAM,GAAG,KAAKjB,OAAL,CAAakB,MAAb,CAAoBC,IAApB,CAAyB;MACpCC,KAAK,EAAE,KAAKpB,OAAL,CAAaoB,KADgB;MAEpCnB,KAAK,EAAE,KAAKA,KAFwB;MAGpCC,OAAO,EAAE,KAAKA,OAHsB;MAIpCK,GAAG,EAAE,KAAKA,GAJ0B;MAKpCc,QAAQ,EAAE,KAAKrB,OAAL,CAAasB,QAAb;IAL0B,CAAzB,CAAf;;IAOA,IAAIL,MAAM,KAAK,cAAf,EAA+B;MAC3B,KAAKN,WAAL,GAAmB,IAAnB;IACH;EACJ;;EACDY,aAAa,CAACrB,OAAD,EAAU;IACnB,KAAKA,OAAL,GAAesB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKvB,OAAvB,CAAd,EAA+CA,OAA/C,CAAf;EACH;;EACDwB,OAAO,CAACT,MAAD,EAASU,QAAT,EAAmB;IACtB,IAAIC,EAAJ;;IACA,IAAI,KAAKb,YAAL,CAAkBE,MAAlB,CAAJ,EAA+B;MAC3BU,QAAQ,CAAC,CAACC,EAAE,GAAG,KAAKpB,YAAX,MAA6B,IAA7B,IAAqCoB,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACC,QAAlE,CAAR;IACH;;IACD,KAAKpB,QAAL,CAAcU,IAAd,CAAmB;MAAEF,MAAF;MAAUU;IAAV,CAAnB;IACA,OAAO,IAAP;EACH;;EACDX,YAAY,GAAG;IACX,IAAI,KAAKX,YAAT,EAAuB;MACnB;IACH;;IACD,KAAKE,GAAL,GAAW,KAAKP,OAAL,CAAakB,MAAb,CAAoBY,QAApB,EAAX;IACA,KAAKpB,QAAL,GAAgB,KAAKV,OAAL,CAAa+B,eAAb,CAA6B,KAAKxB,GAAlC,CAAhB;;IACA,MAAMoB,QAAQ,GAAIzB,OAAD,IAAa;MAC1B,KAAKW,eAAL;;MACA,KAAKmB,cAAL;;MACA,KAAKxB,YAAL,GAAoBN,OAApB;;MACA,KAAK+B,aAAL,CAAmB/B,OAAnB;IACH,CALD;;IAMA,KAAKF,OAAL,CAAakC,GAAb,CAAiB,KAAKxB,QAAtB,EAAgC,EAAhC,EAAoCiB,QAApC;;IACA,KAAKtB,YAAL,GAAoB8B,UAAU,CAAC,MAAM;MACjC,KAAKC,OAAL,CAAa,SAAb,EAAwB,EAAxB;IACH,CAF6B,EAE3B,KAAKjC,OAFsB,CAA9B;EAGH;;EACDiC,OAAO,CAACnB,MAAD,EAASY,QAAT,EAAmB;IACtB,IAAI,KAAKnB,QAAT,EACI,KAAKV,OAAL,CAAaqC,QAAb,CAAsB,KAAK3B,QAA3B,EAAqC;MAAEO,MAAF;MAAUY;IAAV,CAArC;EACP;;EACDS,OAAO,GAAG;IACN,KAAKzB,eAAL;;IACA,KAAKmB,cAAL;EACH;;EACDnB,eAAe,GAAG;IACd,IAAI,CAAC,KAAKH,QAAV,EAAoB;MAChB;IACH;;IACD,KAAKV,OAAL,CAAauC,IAAb,CAAkB,KAAK7B,QAAvB,EAAiC,EAAjC;EACH;;EACDsB,cAAc,GAAG;IACbQ,YAAY,CAAC,KAAKnC,YAAN,CAAZ;IACA,KAAKA,YAAL,GAAoBC,SAApB;EACH;;EACD2B,aAAa,CAAC;IAAEhB,MAAF;IAAUY;EAAV,CAAD,EAAwB;IACjC,KAAKpB,QAAL,CACKgC,MADL,CACaC,CAAD,IAAOA,CAAC,CAACzB,MAAF,KAAaA,MADhC,EAEK0B,OAFL,CAEcD,CAAD,IAAOA,CAAC,CAACf,QAAF,CAAWE,QAAX,CAFpB;EAGH;;EACDd,YAAY,CAACE,MAAD,EAAS;IACjB,OAAO,KAAKT,YAAL,IAAqB,KAAKA,YAAL,CAAkBS,MAAlB,KAA6BA,MAAzD;EACH;;AArGqB"},"metadata":{},"sourceType":"module"}