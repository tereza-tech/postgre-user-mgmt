{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n  constructor({\n    url = '',\n    headers = {},\n    fetch\n  }) {\n    this.url = url;\n    this.headers = headers;\n    this.fetch = resolveFetch(fetch);\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this)\n    };\n  }\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n\n\n  signOut(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n          headers: this.headers,\n          jwt,\n          noResolveJson: true\n        });\n        return {\n          data: null,\n          error: null\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n   * @param options.data Optional user metadata\n   */\n\n\n  inviteUserByEmail(email, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n          body: {\n            email,\n            data: options.data\n          },\n          headers: this.headers,\n          redirectTo: options.redirectTo,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n\n\n  generateLink(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          options\n        } = params,\n              rest = __rest(params, [\"options\"]);\n\n        const body = Object.assign(Object.assign({}, rest), options);\n\n        if ('newEmail' in rest) {\n          // replace newEmail with new_email in request body\n          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n          delete body['newEmail'];\n        }\n\n        return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n          body: body,\n          headers: this.headers,\n          xform: _generateLinkResponse,\n          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              properties: null,\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  } // User Admin API\n\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  createUser(attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n\n\n  listUsers(params) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const pagination = {\n          nextPage: null,\n          lastPage: 0,\n          total: 0\n        };\n        const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n          headers: this.headers,\n          noResolveJson: true,\n          query: {\n            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''\n          },\n          xform: _noResolveJsonResponse\n        });\n        if (response.error) throw response.error;\n        const users = yield response.json();\n        const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n        const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n\n        if (links.length > 0) {\n          links.forEach(link => {\n            const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n            const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n            pagination[`${rel}Page`] = page;\n          });\n          pagination.total = parseInt(total);\n        }\n\n        return {\n          data: Object.assign(Object.assign({}, users), pagination),\n          error: null\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              users: []\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  getUserById(uid) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  updateUserById(uid, attributes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n          body: attributes,\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n\n\n  deleteUser(id) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n          headers: this.headers,\n          xform: _userResponse\n        });\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: {\n              user: null\n            },\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  _listFactors(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const {\n          data,\n          error\n        } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n          headers: this.headers,\n          xform: factors => {\n            return {\n              data: {\n                factors\n              },\n              error: null\n            };\n          }\n        });\n        return {\n          data,\n          error\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  _deleteFactor(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n          headers: this.headers\n        });\n        return {\n          data,\n          error: null\n        };\n      } catch (error) {\n        if (isAuthError(error)) {\n          return {\n            data: null,\n            error\n          };\n        }\n\n        throw error;\n      }\n    });\n  }\n\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","_generateLinkResponse","_noResolveJsonResponse","_request","_userResponse","resolveFetch","isAuthError","GoTrueAdminApi","constructor","url","headers","fetch","mfa","listFactors","_listFactors","bind","deleteFactor","_deleteFactor","signOut","jwt","noResolveJson","data","error","inviteUserByEmail","email","options","body","redirectTo","xform","user","generateLink","params","rest","assign","new_email","newEmail","properties","createUser","attributes","listUsers","_a","_b","_c","_d","_e","_f","_g","pagination","nextPage","lastPage","total","response","query","page","toString","per_page","perPage","users","json","get","links","split","forEach","link","parseInt","substring","rel","JSON","parse","getUserById","uid","updateUserById","deleteUser","id","userId","factors"],"sources":["/home/runner/Usrmgmt/node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}