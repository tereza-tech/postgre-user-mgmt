{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n  constructor(builder) {\n    this.shouldThrowOnError = false;\n    this.method = builder.method;\n    this.url = builder.url;\n    this.headers = builder.headers;\n    this.schema = builder.schema;\n    this.body = builder.body;\n    this.shouldThrowOnError = builder.shouldThrowOnError;\n    this.signal = builder.signal;\n    this.allowEmpty = builder.allowEmpty;\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch;\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = crossFetch;\n    } else {\n      this.fetch = fetch;\n    }\n  }\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n\n\n  throwOnError() {\n    this.shouldThrowOnError = true;\n    return this;\n  }\n\n  then(onfulfilled, onrejected) {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {// skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema;\n    } else {\n      this.headers['Content-Profile'] = this.schema;\n    }\n\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json';\n    } // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n\n\n    const _fetch = this.fetch;\n\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal\n    }).then(res => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b, _c;\n\n      let error = null;\n      let data = null;\n      let count = null;\n      let status = res.status;\n      let statusText = res.statusText;\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = yield res.text();\n\n          if (body === '') {// Prefer: return=minimal\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = body;\n          } else if (this.headers['Accept'] && this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n            data = body;\n          } else {\n            data = JSON.parse(body);\n          }\n        }\n\n        const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n        const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1]);\n        }\n      } else {\n        const body = yield res.text();\n\n        try {\n          error = JSON.parse(body); // Workaround for https://github.com/supabase/postgrest-js/issues/295\n\n          if (Array.isArray(error) && res.status === 404) {\n            data = [];\n            error = null;\n            status = 200;\n            statusText = 'OK';\n          }\n        } catch (_d) {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204;\n            statusText = 'No Content';\n          } else {\n            error = {\n              message: body\n            };\n          }\n        }\n\n        if (error && this.allowEmpty && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n          error = null;\n          status = 200;\n          statusText = 'OK';\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error;\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText\n      };\n      return postgrestResponse;\n    }));\n\n    if (!this.shouldThrowOnError) {\n      res = res.catch(fetchError => ({\n        error: {\n          message: `FetchError: ${fetchError.message}`,\n          details: '',\n          hint: '',\n          code: fetchError.code || ''\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: ''\n      }));\n    }\n\n    return res.then(onfulfilled, onrejected);\n  }\n\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","crossFetch","PostgrestBuilder","constructor","builder","shouldThrowOnError","method","url","headers","schema","body","signal","allowEmpty","fetch","throwOnError","onfulfilled","onrejected","undefined","includes","_fetch","res","toString","JSON","stringify","_a","_b","_c","error","data","count","status","statusText","ok","text","parse","countHeader","match","contentRange","get","split","length","parseInt","Array","isArray","_d","message","details","postgrestResponse","catch","fetchError","hint","code"],"sources":["/home/runner/Usrmgmt/node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.allowEmpty = builder.allowEmpty;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = yield res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.allowEmpty && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                count: null,\n                status: 0,\n                statusText: '',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}